services:
  ui:
    build:
      context: ../../src/ui
    ports:
      - "3000:3000"
    volumes:
      - ../../src/ui:/app
    depends_on:
      - agent
    env_file:
      - .env
    environment:
      - REACT_APP_API_SERVER_BASE_URL=http://localhost:8000/api/v1/chat
      - REACT_APP_DESCOPE_PROJECT_ID=${DESCOPE_PROJECT_ID}
    command: >
      bash -c "
        npm start --reload
      "
    restart: always

  agent:
    build:
      context: ../../src/agent
    ports:
      - "8000:8000"
    volumes:
      - ../../certs:/certs
      - ../../src/agent:/app
    depends_on:
      db:
        condition: service_healthy
      mcp-server-postgres:
        condition: service_started
    env_file:
      - .env
    environment:
      AGENT_TLS_CAFILE: /certs/ca-root-cert.pem
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      DESCOPE_PROJECT_ID: ${DESCOPE_PROJECT_ID}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      DEV_TO_TOKEN: ${DEV_TO_TOKEN}
      STACKEXCHANGE_KEY: ${STACKEXCHANGE_KEY}
      AGENT_CONFIG_YAML: |
        # FastAgent Configuration - PostgreSQL MCP Integration
        default_model: haiku

        logger:
          level: "info"
          type: "console"
          progress_display: false
          show_chat: true
          show_tools: true
          otel:
            enabled: false
            console_debug: false

        # MCP Servers - Added PostgreSQL server for database access
        mcp:
          servers:
            server_fetch:
                transport: "sse"
                url: "http://mcp-server-fetch:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_brave_search:
                transport: "sse"
                url: "http://mcp-server-brave-search:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_sequential_thinking:
                transport: "sse"
                url: "http://mcp-server-sequential-thinking:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_memory:
                transport: "sse"
                url: "http://mcp-server-memory:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
            server_postgres:
                transport: "sse"
                url: "http://mcp-server-postgres:8000/sse"
                read_timeout_seconds: 65534
                read_transport_sse_timeout_seconds: 65534
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  mcp-server-fetch:
    image: acuvity/mcp-server-fetch:latest
    ports:
      - "8901:8000"
    environment:
      - MINIBRIDGE_LOG_LEVEL=${MCP_SERVER_LOG_LEVEL}
    restart: always

  mcp-server-brave-search:
    image: acuvity/mcp-server-brave-search:latest
    ports:
      - "8902:8000"
    env_file:
      - .env
    environment:
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - MINIBRIDGE_LOG_LEVEL=${MCP_SERVER_LOG_LEVEL}
    restart: always

  mcp-server-sequential-thinking:
    image: acuvity/mcp-server-sequential-thinking:latest
    ports:
      - "8903:8000"
    environment:
      - MINIBRIDGE_LOG_LEVEL=${MCP_SERVER_LOG_LEVEL}
    restart: always

  mcp-server-memory:
    image: acuvity/mcp-server-memory:latest
    ports:
      - "8904:8000"
    environment:
      - MINIBRIDGE_LOG_LEVEL=${MCP_SERVER_LOG_LEVEL}
    volumes:
      - memory_data:/data
    restart: always

  # PostgreSQL MCP Server for direct database access
  mcp-server-postgres:
    image: acuvity/mcp-server-postgres:latest
    ports:
      - "8905:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - MINIBRIDGE_LOG_LEVEL=${MCP_SERVER_LOG_LEVEL}
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  memory_data:
